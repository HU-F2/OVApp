#!/usr/bin/env bash
set -euo pipefail
LC_ALL=C

# Configuration
VERBOSE=false                       # Set to true for verbose mode
MAX_CHANGED_LINES=500
CHECKSTYLE_CONFIG="checkstyle.xml"  # Path to Checkstyle configuration file
BUILD_TOOL="maven"                  # Choose between 'maven' or 'gradle'

# Color codes
COLOR_RESET="\033[0m\033[2m"
COLOR_GREEN="\033[32m"
COLOR_RED="\033[31m"
COLOR_BLUE="\033[34m"

# Functions
log() {
    if [[ "$VERBOSE" == true ]]; then
        printf "\n${COLOR_BLUE}[DEBUG]${COLOR_RESET} %s\n" "$1"
    fi
}

# Determine the appropriate command flags based on verbose mode
get_command_flags() {
    if [[ "$VERBOSE" == true ]]; then
        echo ""
    else
        echo "-q"
    fi
}

# Validate commit size
validate_commit_size() {
    log "Validating commit size..."
    local changed_lines
    changed_lines=$(git diff --cached --shortstat | awk '/files changed/{print $4}')
    log "Changed lines: ${changed_lines:-0}"
    if [[ -z "$changed_lines" ]]; then
        changed_lines=0
    fi
    if (( changed_lines > MAX_CHANGED_LINES )); then
        printf "\n${COLOR_RED}✘ Too many changes (%s lines) in a single commit!${COLOR_RESET}\n" "$changed_lines"
        # shellcheck disable=SC2059
        printf "${COLOR_RESET}Please break your changes into smaller commits.${COLOR_RESET}\n"
        exit 1
    fi
    # shellcheck disable=SC2059
    printf "\n${COLOR_GREEN}✔ Commit size validation passed.${COLOR_RESET}\n"
}

main() {
    # Validate commit size
    validate_commit_size

    # shellcheck disable=SC2059
    printf "${COLOR_GREEN}✔ All pre-commit checks passed. Proceeding with commit.${COLOR_RESET}\n"
}

main "$@"